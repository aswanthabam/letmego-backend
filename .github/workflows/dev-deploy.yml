name: Production Deployment

on:
  workflow_dispatch:
    inputs:
      sync_code:
        description: "Sync code to server"
        required: true
        default: false
        type: boolean
      sync_env:
        description: "Sync enviornment variables"
        required: true
        default: false
        type: boolean
      build_backend:
        description: "Build backend service"
        required: false
        default: false
        type: boolean
      restart_backend:
        description: "Restart backend service"
        required: false
        default: false
        type: boolean
      migrate:
        description: "Migrate database"
        required: false
        default: false
        type: boolean
      restart_all:
        description: "Restart all services"
        required: false
        default: false
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Update avcfastapi submodule
        run: |
          git submodule set-url avcfastapi https://x-access-token:${{ secrets.AVCFASTAPI_GH_ACCESS_TOKEN }}@github.com/aswanthabam/avcfastapi.git
          git submodule sync
          git submodule update --init --recursive

      - name: Configure SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEV_SSH_PRIVATE_KEY }}

      - name: Deploy
        env:
          REMOTE_IP: ${{ secrets.DEV_REMOTE_IP }}
          USER: ${{ secrets.DEV_REMOTE_USER }}
          PROJECT_PATH: ${{ secrets.DEV_PROJECT_PATH }}
          RESTART_BACKEND: ${{ github.event.inputs.restart_backend }}
          MIGRATE: ${{ github.event.inputs.migrate }}
          SYNC_CODE: ${{ github.event.inputs.sync_code }}
          SYNC_ENV: ${{ github.event.inputs.sync_env }}
          BUILD_BACKEND: ${{ github.event.inputs.build_backend }}
          RESTART_ALL: ${{ github.event.inputs.restart_all }}
          ENV_VARS: ${{ secrets.DEV_ENV_VARIABLES }}
          DOCKER_COMPOSE_FILE: docker-compose.yml
        run: |
          if [ "$SYNC_CODE" = "true" ]; then
            rsync -avz --delete \
              --exclude='README.md' \
              --exclude='.gitignore' \
              --exclude='.git/' \
              --exclude='__pycache__/' \
              --exclude='.env' \
              --exclude='firebase-secret.json' \
              --exclude='media/' \
              -e "ssh -o StrictHostKeyChecking=no" ./ $USER@$REMOTE_IP:$PROJECT_PATH --rsync-path="sudo rsync"
          fi

          ssh -o StrictHostKeyChecking=no $USER@$REMOTE_IP <<EOF
          cd $PROJECT_PATH

          if [ "$SYNC_ENV" = "true" ]; then
            echo "Syncing environment variables..."
            printf "%s" "$ENV_VARS" | sudo tee .env > /dev/null
          fi

          if [ "$BUILD_BACKEND" = "true" ]; then
            echo "Building backend service..."
            sudo docker-compose -f $DOCKER_COMPOSE_FILE build backend
          fi

          if [ "$RESTART_BACKEND" = "true" ]; then
            echo "Restarting backend service..."
            sudo docker-compose -f $DOCKER_COMPOSE_FILE down backend
            sudo docker-compose -f $DOCKER_COMPOSE_FILE up backend -d
          fi

          if [ "$RESTART_ALL" = "true" ]; then
            echo "Restarting all services..."
            sudo docker-compose -f $DOCKER_COMPOSE_FILE down
            sudo docker-compose -f $DOCKER_COMPOSE_FILE up -d
          fi

          if [ "$MIGRATE" = "true" ]; then
            echo "Migrating database..."
            sudo docker-compose -f $DOCKER_COMPOSE_FILE exec backend alembic upgrade head
          fi

          EOF
