"""add vehicle location


Revision ID: 3e7f82358ed2
Revises: ce219849935f
Create Date: 2025-09-15 18:40:48.858910

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from avcfastapi.core.database.sqlalchamey import core
import avcfastapi

# revision identifiers, used by Alembic.
revision: str = "3e7f82358ed2"
down_revision: Union[str, Sequence[str], None] = "ce219849935f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "vehicle_locations",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("vehicle_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("latitude", sa.Float(), nullable=False),
        sa.Column("longitude", sa.Float(), nullable=False),
        sa.Column("notes", sa.String(length=255), nullable=True),
        sa.Column(
            "image",
            avcfastapi.core.storage.sqlalchemy.fields.imagefield.ImageField(),
            nullable=True,
        ),
        sa.Column("visibility", sa.String(length=20), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column(
            "deleted_at",
            avcfastapi.core.database.sqlalchamey.fields.TZAwareDateTime(timezone=True),
            nullable=True,
        ),
        sa.Column(
            "created_at",
            avcfastapi.core.database.sqlalchamey.fields.TZAwareDateTime(timezone=True),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            avcfastapi.core.database.sqlalchamey.fields.TZAwareDateTime(timezone=True),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["vehicle_id"],
            ["vehicles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_vehicle_locations_is_deleted"),
        "vehicle_locations",
        ["is_deleted"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_vehicle_locations_is_deleted"), table_name="vehicle_locations"
    )
    op.drop_table("vehicle_locations")
    # ### end Alembic commands ###
