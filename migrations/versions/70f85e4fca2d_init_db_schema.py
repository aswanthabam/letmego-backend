"""init db schema

Revision ID: 70f85e4fca2d
Revises:
Create Date: 2025-07-03 18:51:38.298139

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import core


# revision identifiers, used by Alembic.
revision: str = "70f85e4fca2d"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("uid", sa.String(length=128), nullable=False),
        sa.Column("fullname", sa.String(length=120), nullable=False),
        sa.Column("email", sa.String(length=120), nullable=True),
        sa.Column("email_verified", sa.Boolean(), nullable=True),
        sa.Column("phone_number", sa.String(length=120), nullable=True),
        sa.Column(
            "profile_picture",
            core.storage.sqlalchemy.fields.imagefield.ImageField(),
            nullable=True,
        ),
        sa.Column("company_name", sa.String(length=100), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column(
            "deleted_at", core.db.fields.TZAwareDateTime(timezone=True), nullable=True
        ),
        sa.Column(
            "created_at", core.db.fields.TZAwareDateTime(timezone=True), nullable=False
        ),
        sa.Column(
            "updated_at", core.db.fields.TZAwareDateTime(timezone=True), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("uid"),
    )
    op.create_index(op.f("ix_users_is_deleted"), "users", ["is_deleted"], unique=False)
    op.create_table(
        "vehicles",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("vehicle_number", sa.String(length=20), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=True),
        sa.Column(
            "vehicle_type",
            sa.Enum(
                "CAR",
                "MOTORCYCLE",
                "TRUCK",
                "BUS",
                "VAN",
                "SUV",
                "PICKUP_TRUCK",
                "SCOOTER",
                "BICYCLE",
                "TRAILER",
                "RICKSHAW",
                "AUTO_RICKSHAW",
                "TRACTOR",
                "AMBULANCE",
                "FIRE_TRUCK",
                "POLICE_VEHICLE",
                "TAXI",
                "OTHER",
                name="vehicletype",
            ),
            nullable=True,
        ),
        sa.Column("brand", sa.String(length=50), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column(
            "image",
            core.storage.sqlalchemy.fields.imagefield.ImageField(),
            nullable=True,
        ),
        sa.Column("is_verified", sa.Boolean(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column(
            "deleted_at", core.db.fields.TZAwareDateTime(timezone=True), nullable=True
        ),
        sa.Column(
            "created_at", core.db.fields.TZAwareDateTime(timezone=True), nullable=False
        ),
        sa.Column(
            "updated_at", core.db.fields.TZAwareDateTime(timezone=True), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("vehicle_number"),
    )
    op.create_index(
        op.f("ix_vehicles_is_deleted"), "vehicles", ["is_deleted"], unique=False
    )
    op.create_table(
        "vehicle_reports",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("vehicle_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column(
            "deleted_at", core.db.fields.TZAwareDateTime(timezone=True), nullable=True
        ),
        sa.Column(
            "created_at", core.db.fields.TZAwareDateTime(timezone=True), nullable=False
        ),
        sa.Column(
            "updated_at", core.db.fields.TZAwareDateTime(timezone=True), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["vehicle_id"],
            ["vehicles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_vehicle_reports_is_deleted"),
        "vehicle_reports",
        ["is_deleted"],
        unique=False,
    )
    op.create_table(
        "vehicle_report_images",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("report_id", sa.UUID(), nullable=False),
        sa.Column("image_url", sa.String(length=255), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column(
            "deleted_at", core.db.fields.TZAwareDateTime(timezone=True), nullable=True
        ),
        sa.Column(
            "created_at", core.db.fields.TZAwareDateTime(timezone=True), nullable=False
        ),
        sa.Column(
            "updated_at", core.db.fields.TZAwareDateTime(timezone=True), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["report_id"],
            ["vehicle_reports.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_vehicle_report_images_is_deleted"),
        "vehicle_report_images",
        ["is_deleted"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_vehicle_report_images_is_deleted"), table_name="vehicle_report_images"
    )
    op.drop_table("vehicle_report_images")
    op.drop_index(op.f("ix_vehicle_reports_is_deleted"), table_name="vehicle_reports")
    op.drop_table("vehicle_reports")
    op.drop_index(op.f("ix_vehicles_is_deleted"), table_name="vehicles")
    op.drop_table("vehicles")
    op.drop_index(op.f("ix_users_is_deleted"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
